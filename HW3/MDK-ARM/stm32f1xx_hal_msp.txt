; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --split_sections --debug -c --asm --interleave -ohw3_freertos\stm32f1xx_hal_msp.o --asm_dir=./ --list_dir=--list --depend=hw3_freertos\stm32f1xx_hal_msp.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931 -I..\Inc -I..\Drivers\STM32F1xx_HAL_Driver\Inc\Legacy -I..\Drivers\CMSIS\Device\ST\STM32F1xx\Include -I..\Drivers\STM32F1xx_HAL_Driver\Inc -I../Drivers/CMSIS/Include -I..\FreeRTOS\include -I..\Middlewares\Third_Party\FreeRTOS\Source\portable\RVDS\ARM_CM3 -I..\Middlewares\Third_Party\FreeRTOS\Source\include -I..\Middlewares\Third_Party\FreeRTOS\Source\CMSIS_RTOS -I.\RTE\_HW3_FreeRTOS -IC:\Users\ChangEn\AppData\Local\Arm\Packs\ARM\CMSIS\5.8.0\CMSIS\Core\Include -IC:\Users\ChangEn\AppData\Local\Arm\Packs\Keil\STM32F1xx_DFP\2.3.0\Device\Include -D__MICROLIB -D__UVISION_VERSION=536 -D_RTE_ -DSTM32F10X_HD -D_RTE_ -DUSE_HAL_DRIVER -DSTM32F103x6 --omf_browse=hw3_freertos\stm32f1xx_hal_msp.crf ..\Src\stm32f1xx_hal_msp.c]
                          THUMB

                          AREA ||i.HAL_CRC_MspDeInit||, CODE, READONLY, ALIGN=2

                  HAL_CRC_MspDeInit PROC
;;;100    
;;;101    void HAL_CRC_MspDeInit(CRC_HandleTypeDef* hcrc)
000000  6800              LDR      r0,[r0,#0]
;;;102    {
;;;103    
;;;104      if(hcrc->Instance==CRC)
000002  4904              LDR      r1,|L1.20|
000004  4288              CMP      r0,r1
000006  d104              BNE      |L1.18|
;;;105      {
;;;106      /* USER CODE BEGIN CRC_MspDeInit 0 */
;;;107    
;;;108      /* USER CODE END CRC_MspDeInit 0 */
;;;109        /* Peripheral clock disable */
;;;110        __HAL_RCC_CRC_CLK_DISABLE();
000008  4803              LDR      r0,|L1.24|
00000a  6941              LDR      r1,[r0,#0x14]
00000c  f0210140          BIC      r1,r1,#0x40
000010  6141              STR      r1,[r0,#0x14]
                  |L1.18|
;;;111      }
;;;112      /* USER CODE BEGIN CRC_MspDeInit 1 */
;;;113    
;;;114      /* USER CODE END CRC_MspDeInit 1 */
;;;115    
;;;116    }
000012  4770              BX       lr
;;;117    
                          ENDP

                  |L1.20|
                          DCD      0x40023000
                  |L1.24|
                          DCD      0x40021000

                          AREA ||i.HAL_CRC_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_CRC_MspInit PROC
;;;83     
;;;84     void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
000000  b508              PUSH     {r3,lr}
;;;85     {
;;;86     
;;;87       if(hcrc->Instance==CRC)
000002  6800              LDR      r0,[r0,#0]
000004  4906              LDR      r1,|L2.32|
000006  4288              CMP      r0,r1
000008  d108              BNE      |L2.28|
;;;88       {
;;;89       /* USER CODE BEGIN CRC_MspInit 0 */
;;;90     
;;;91       /* USER CODE END CRC_MspInit 0 */
;;;92         /* Peripheral clock enable */
;;;93         __HAL_RCC_CRC_CLK_ENABLE();
00000a  4806              LDR      r0,|L2.36|
00000c  6941              LDR      r1,[r0,#0x14]
00000e  f0410140          ORR      r1,r1,#0x40
000012  6141              STR      r1,[r0,#0x14]
000014  6940              LDR      r0,[r0,#0x14]
000016  f0000040          AND      r0,r0,#0x40
00001a  9000              STR      r0,[sp,#0]
                  |L2.28|
;;;94       /* USER CODE BEGIN CRC_MspInit 1 */
;;;95     
;;;96       /* USER CODE END CRC_MspInit 1 */
;;;97       }
;;;98     
;;;99     }
00001c  bd08              POP      {r3,pc}
;;;100    
                          ENDP

00001e  0000              DCW      0x0000
                  |L2.32|
                          DCD      0x40023000
                  |L2.36|
                          DCD      0x40021000

                          AREA ||i.HAL_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_MspInit PROC
;;;48       */
;;;49     void HAL_MspInit(void)
000000  481d              LDR      r0,|L3.120|
;;;50     {
000002  b508              PUSH     {r3,lr}
;;;51       /* USER CODE BEGIN MspInit 0 */
;;;52     
;;;53       /* USER CODE END MspInit 0 */
;;;54     
;;;55       __HAL_RCC_AFIO_CLK_ENABLE();
000004  6981              LDR      r1,[r0,#0x18]
000006  f0410101          ORR      r1,r1,#1
00000a  6181              STR      r1,[r0,#0x18]
00000c  6980              LDR      r0,[r0,#0x18]
00000e  f0000001          AND      r0,r0,#1
;;;56     
;;;57       HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
000012  9000              STR      r0,[sp,#0]
000014  2003              MOVS     r0,#3
000016  f7fffffe          BL       HAL_NVIC_SetPriorityGrouping
;;;58     
;;;59       /* System interrupt init*/
;;;60       /* MemoryManagement_IRQn interrupt configuration */
;;;61       HAL_NVIC_SetPriority(MemoryManagement_IRQn, 0, 0);
00001a  2200              MOVS     r2,#0
00001c  4611              MOV      r1,r2
00001e  f06f000b          MVN      r0,#0xb
000022  f7fffffe          BL       HAL_NVIC_SetPriority
;;;62       /* BusFault_IRQn interrupt configuration */
;;;63       HAL_NVIC_SetPriority(BusFault_IRQn, 0, 0);
000026  2200              MOVS     r2,#0
000028  4611              MOV      r1,r2
00002a  f06f000a          MVN      r0,#0xa
00002e  f7fffffe          BL       HAL_NVIC_SetPriority
;;;64       /* UsageFault_IRQn interrupt configuration */
;;;65       HAL_NVIC_SetPriority(UsageFault_IRQn, 0, 0);
000032  2200              MOVS     r2,#0
000034  4611              MOV      r1,r2
000036  f06f0009          MVN      r0,#9
00003a  f7fffffe          BL       HAL_NVIC_SetPriority
;;;66       /* SVCall_IRQn interrupt configuration */
;;;67       HAL_NVIC_SetPriority(SVCall_IRQn, 0, 0);
00003e  2200              MOVS     r2,#0
000040  4611              MOV      r1,r2
000042  1f50              SUBS     r0,r2,#5
000044  f7fffffe          BL       HAL_NVIC_SetPriority
;;;68       /* DebugMonitor_IRQn interrupt configuration */
;;;69       HAL_NVIC_SetPriority(DebugMonitor_IRQn, 0, 0);
000048  2200              MOVS     r2,#0
00004a  4611              MOV      r1,r2
00004c  1f10              SUBS     r0,r2,#4
00004e  f7fffffe          BL       HAL_NVIC_SetPriority
;;;70       /* PendSV_IRQn interrupt configuration */
;;;71       HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
000052  2200              MOVS     r2,#0
000054  210f              MOVS     r1,#0xf
000056  1e90              SUBS     r0,r2,#2
000058  f7fffffe          BL       HAL_NVIC_SetPriority
;;;72       /* SysTick_IRQn interrupt configuration */
;;;73       HAL_NVIC_SetPriority(SysTick_IRQn, 15, 0);
00005c  2200              MOVS     r2,#0
00005e  210f              MOVS     r1,#0xf
000060  1e50              SUBS     r0,r2,#1
000062  f7fffffe          BL       HAL_NVIC_SetPriority
;;;74     
;;;75         /**DISABLE: JTAG-DP Disabled and SW-DP Disabled 
;;;76         */
;;;77       __HAL_AFIO_REMAP_SWJ_DISABLE();
000066  4805              LDR      r0,|L3.124|
000068  6841              LDR      r1,[r0,#4]
00006a  f02161e0          BIC      r1,r1,#0x7000000
00006e  f0416180          ORR      r1,r1,#0x4000000
000072  6041              STR      r1,[r0,#4]
;;;78     
;;;79       /* USER CODE BEGIN MspInit 1 */
;;;80     
;;;81       /* USER CODE END MspInit 1 */
;;;82     }
000074  bd08              POP      {r3,pc}
;;;83     
                          ENDP

000076  0000              DCW      0x0000
                  |L3.120|
                          DCD      0x40021000
                  |L3.124|
                          DCD      0x40010000

                          AREA ||i.HAL_SPI_MspDeInit||, CODE, READONLY, ALIGN=2

                  HAL_SPI_MspDeInit PROC
;;;162    
;;;163    void HAL_SPI_MspDeInit(SPI_HandleTypeDef* hspi)
000000  b510              PUSH     {r4,lr}
;;;164    {
000002  4604              MOV      r4,r0
;;;165    
;;;166      if(hspi->Instance==SPI1)
000004  6800              LDR      r0,[r0,#0]
000006  4909              LDR      r1,|L4.44|
000008  4288              CMP      r0,r1
00000a  d10d              BNE      |L4.40|
;;;167      {
;;;168      /* USER CODE BEGIN SPI1_MspDeInit 0 */
;;;169    
;;;170      /* USER CODE END SPI1_MspDeInit 0 */
;;;171        /* Peripheral clock disable */
;;;172        __HAL_RCC_SPI1_CLK_DISABLE();
00000c  4808              LDR      r0,|L4.48|
00000e  6981              LDR      r1,[r0,#0x18]
000010  f4215180          BIC      r1,r1,#0x1000
000014  6181              STR      r1,[r0,#0x18]
;;;173      
;;;174        /**SPI1 GPIO Configuration    
;;;175        PA5     ------> SPI1_SCK
;;;176        PA7     ------> SPI1_MOSI 
;;;177        */
;;;178        HAL_GPIO_DeInit(GPIOA, GPIO_PIN_5|GPIO_PIN_7);
000016  21a0              MOVS     r1,#0xa0
000018  4806              LDR      r0,|L4.52|
00001a  f7fffffe          BL       HAL_GPIO_DeInit
;;;179    
;;;180        /* Peripheral DMA DeInit*/
;;;181        HAL_DMA_DeInit(hspi->hdmatx);
00001e  6c20              LDR      r0,[r4,#0x40]
000020  e8bd4010          POP      {r4,lr}
000024  f7ffbffe          B.W      HAL_DMA_DeInit
                  |L4.40|
;;;182      }
;;;183      /* USER CODE BEGIN SPI1_MspDeInit 1 */
;;;184    
;;;185      /* USER CODE END SPI1_MspDeInit 1 */
;;;186    
;;;187    }
000028  bd10              POP      {r4,pc}
;;;188    
                          ENDP

00002a  0000              DCW      0x0000
                  |L4.44|
                          DCD      0x40013000
                  |L4.48|
                          DCD      0x40021000
                  |L4.52|
                          DCD      0x40010800

                          AREA ||i.HAL_SPI_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_SPI_MspInit PROC
;;;117    
;;;118    void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
000000  b530              PUSH     {r4,r5,lr}
;;;119    {
000002  4605              MOV      r5,r0
;;;120    
;;;121      GPIO_InitTypeDef GPIO_InitStruct;
;;;122      if(hspi->Instance==SPI1)
000004  6800              LDR      r0,[r0,#0]
000006  4917              LDR      r1,|L5.100|
000008  b085              SUB      sp,sp,#0x14           ;119
00000a  4288              CMP      r0,r1
00000c  d127              BNE      |L5.94|
;;;123      {
;;;124      /* USER CODE BEGIN SPI1_MspInit 0 */
;;;125    
;;;126      /* USER CODE END SPI1_MspInit 0 */
;;;127        /* Peripheral clock enable */
;;;128        __HAL_RCC_SPI1_CLK_ENABLE();
00000e  4816              LDR      r0,|L5.104|
000010  6981              LDR      r1,[r0,#0x18]
000012  f4415180          ORR      r1,r1,#0x1000
000016  6181              STR      r1,[r0,#0x18]
000018  6980              LDR      r0,[r0,#0x18]
;;;129      
;;;130        /**SPI1 GPIO Configuration    
;;;131        PA5     ------> SPI1_SCK
;;;132        PA7     ------> SPI1_MOSI 
;;;133        */
;;;134        GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_7;
;;;135        GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
;;;136        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
;;;137        HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
00001a  4669              MOV      r1,sp
00001c  f4005080          AND      r0,r0,#0x1000         ;128
000020  9004              STR      r0,[sp,#0x10]         ;134
000022  20a0              MOVS     r0,#0xa0              ;134
000024  9000              STR      r0,[sp,#0]            ;135
000026  2002              MOVS     r0,#2                 ;135
000028  9001              STR      r0,[sp,#4]            ;136
00002a  2003              MOVS     r0,#3                 ;136
00002c  9003              STR      r0,[sp,#0xc]
00002e  480f              LDR      r0,|L5.108|
000030  f7fffffe          BL       HAL_GPIO_Init
;;;138    
;;;139        /* Peripheral DMA init*/
;;;140      
;;;141        hdma_spi1_tx.Instance = DMA1_Channel3;
000034  4c0f              LDR      r4,|L5.116|
000036  480e              LDR      r0,|L5.112|
;;;142        hdma_spi1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
;;;143        hdma_spi1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
000038  2100              MOVS     r1,#0
00003a  6020              STR      r0,[r4,#0]            ;142  ; hdma_spi1_tx
00003c  2010              MOVS     r0,#0x10              ;142
00003e  e9c40101          STRD     r0,r1,[r4,#4]
;;;144        hdma_spi1_tx.Init.MemInc = DMA_MINC_ENABLE;
000042  2080              MOVS     r0,#0x80
000044  e9c40103          STRD     r0,r1,[r4,#0xc]
;;;145        hdma_spi1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
;;;146        hdma_spi1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
;;;147        hdma_spi1_tx.Init.Mode = DMA_NORMAL;
000048  6161              STR      r1,[r4,#0x14]  ; hdma_spi1_tx
;;;148        hdma_spi1_tx.Init.Priority = DMA_PRIORITY_LOW;
00004a  61a1              STR      r1,[r4,#0x18]  ; hdma_spi1_tx
;;;149        if (HAL_DMA_Init(&hdma_spi1_tx) != HAL_OK)
00004c  4620              MOV      r0,r4
00004e  61e1              STR      r1,[r4,#0x1c]  ; hdma_spi1_tx
000050  f7fffffe          BL       HAL_DMA_Init
000054  b108              CBZ      r0,|L5.90|
;;;150        {
;;;151          Error_Handler();
000056  f7fffffe          BL       Error_Handler
                  |L5.90|
;;;152        }
;;;153    
;;;154        __HAL_LINKDMA(hspi,hdmatx,hdma_spi1_tx);
00005a  642c              STR      r4,[r5,#0x40]
00005c  6265              STR      r5,[r4,#0x24]  ; hdma_spi1_tx
                  |L5.94|
;;;155    
;;;156      /* USER CODE BEGIN SPI1_MspInit 1 */
;;;157    
;;;158      /* USER CODE END SPI1_MspInit 1 */
;;;159      }
;;;160    
;;;161    }
00005e  b005              ADD      sp,sp,#0x14
000060  bd30              POP      {r4,r5,pc}
;;;162    
                          ENDP

000062  0000              DCW      0x0000
                  |L5.100|
                          DCD      0x40013000
                  |L5.104|
                          DCD      0x40021000
                  |L5.108|
                          DCD      0x40010800
                  |L5.112|
                          DCD      0x40020030
                  |L5.116|
                          DCD      hdma_spi1_tx

                          AREA ||i.HAL_UART_MspDeInit||, CODE, READONLY, ALIGN=2

                  HAL_UART_MspDeInit PROC
;;;241    
;;;242    void HAL_UART_MspDeInit(UART_HandleTypeDef* huart)
000000  b510              PUSH     {r4,lr}
;;;243    {
000002  4604              MOV      r4,r0
;;;244    
;;;245      if(huart->Instance==USART1)
000004  6800              LDR      r0,[r0,#0]
000006  490b              LDR      r1,|L6.52|
000008  4288              CMP      r0,r1
00000a  d111              BNE      |L6.48|
;;;246      {
;;;247      /* USER CODE BEGIN USART1_MspDeInit 0 */
;;;248    
;;;249      /* USER CODE END USART1_MspDeInit 0 */
;;;250        /* Peripheral clock disable */
;;;251        __HAL_RCC_USART1_CLK_DISABLE();
00000c  480a              LDR      r0,|L6.56|
00000e  6981              LDR      r1,[r0,#0x18]
000010  f4214180          BIC      r1,r1,#0x4000
000014  6181              STR      r1,[r0,#0x18]
;;;252      
;;;253        /**USART1 GPIO Configuration    
;;;254        PA9     ------> USART1_TX
;;;255        PA10     ------> USART1_RX 
;;;256        */
;;;257        HAL_GPIO_DeInit(GPIOA, GPIO_PIN_9|GPIO_PIN_10);
000016  f44f61c0          MOV      r1,#0x600
00001a  4808              LDR      r0,|L6.60|
00001c  f7fffffe          BL       HAL_GPIO_DeInit
;;;258    
;;;259        /* Peripheral DMA DeInit*/
;;;260        HAL_DMA_DeInit(huart->hdmatx);
000020  6b20              LDR      r0,[r4,#0x30]
000022  f7fffffe          BL       HAL_DMA_DeInit
;;;261    
;;;262        /* Peripheral interrupt DeInit*/
;;;263        HAL_NVIC_DisableIRQ(USART1_IRQn);
000026  e8bd4010          POP      {r4,lr}
00002a  2025              MOVS     r0,#0x25
00002c  f7ffbffe          B.W      HAL_NVIC_DisableIRQ
                  |L6.48|
;;;264    
;;;265      }
;;;266      /* USER CODE BEGIN USART1_MspDeInit 1 */
;;;267    
;;;268      /* USER CODE END USART1_MspDeInit 1 */
;;;269    
;;;270    }
000030  bd10              POP      {r4,pc}
;;;271    
                          ENDP

000032  0000              DCW      0x0000
                  |L6.52|
                          DCD      0x40013800
                  |L6.56|
                          DCD      0x40021000
                  |L6.60|
                          DCD      0x40010800

                          AREA ||i.HAL_UART_MspInit||, CODE, READONLY, ALIGN=2

                  HAL_UART_MspInit PROC
;;;188    
;;;189    void HAL_UART_MspInit(UART_HandleTypeDef* huart)
000000  b570              PUSH     {r4-r6,lr}
;;;190    {
000002  4606              MOV      r6,r0
;;;191    
;;;192      GPIO_InitTypeDef GPIO_InitStruct;
;;;193      if(huart->Instance==USART1)
000004  6800              LDR      r0,[r0,#0]
000006  4920              LDR      r1,|L7.136|
000008  b086              SUB      sp,sp,#0x18           ;190
00000a  4288              CMP      r0,r1
00000c  d13a              BNE      |L7.132|
;;;194      {
;;;195      /* USER CODE BEGIN USART1_MspInit 0 */
;;;196    
;;;197      /* USER CODE END USART1_MspInit 0 */
;;;198        /* Peripheral clock enable */
;;;199        __HAL_RCC_USART1_CLK_ENABLE();
00000e  481f              LDR      r0,|L7.140|
000010  6981              LDR      r1,[r0,#0x18]
000012  f4414180          ORR      r1,r1,#0x4000
000016  6181              STR      r1,[r0,#0x18]
000018  6980              LDR      r0,[r0,#0x18]
;;;200      
;;;201        /**USART1 GPIO Configuration    
;;;202        PA9     ------> USART1_TX
;;;203        PA10     ------> USART1_RX 
;;;204        */
;;;205        GPIO_InitStruct.Pin = GPIO_PIN_9;
;;;206        GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
;;;207        GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
;;;208        HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
00001a  4c1d              LDR      r4,|L7.144|
00001c  f4004080          AND      r0,r0,#0x4000         ;199
000020  9004              STR      r0,[sp,#0x10]         ;205
000022  f44f7000          MOV      r0,#0x200             ;205
000026  9000              STR      r0,[sp,#0]            ;206
000028  2002              MOVS     r0,#2                 ;206
00002a  9001              STR      r0,[sp,#4]            ;207
00002c  2003              MOVS     r0,#3                 ;207
00002e  9003              STR      r0,[sp,#0xc]
000030  4669              MOV      r1,sp
000032  4620              MOV      r0,r4
000034  f7fffffe          BL       HAL_GPIO_Init
;;;209    
;;;210        GPIO_InitStruct.Pin = GPIO_PIN_10;
;;;211        GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
000038  2500              MOVS     r5,#0
00003a  1520              ASRS     r0,r4,#20             ;210
00003c  e9cd0500          STRD     r0,r5,[sp,#0]
;;;212        GPIO_InitStruct.Pull = GPIO_NOPULL;
;;;213        HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
000040  4669              MOV      r1,sp
000042  4620              MOV      r0,r4
000044  9502              STR      r5,[sp,#8]
000046  f7fffffe          BL       HAL_GPIO_Init
;;;214    
;;;215        /* Peripheral DMA init*/
;;;216      
;;;217        hdma_usart1_tx.Instance = DMA1_Channel4;
00004a  4c13              LDR      r4,|L7.152|
00004c  4811              LDR      r0,|L7.148|
;;;218        hdma_usart1_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
00004e  6020              STR      r0,[r4,#0]  ; hdma_usart1_tx
000050  2010              MOVS     r0,#0x10
000052  e9c40501          STRD     r0,r5,[r4,#4]
;;;219        hdma_usart1_tx.Init.PeriphInc = DMA_PINC_DISABLE;
;;;220        hdma_usart1_tx.Init.MemInc = DMA_MINC_ENABLE;
000056  2080              MOVS     r0,#0x80
000058  e9c40503          STRD     r0,r5,[r4,#0xc]
;;;221        hdma_usart1_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
;;;222        hdma_usart1_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
;;;223        hdma_usart1_tx.Init.Mode = DMA_NORMAL;
;;;224        hdma_usart1_tx.Init.Priority = DMA_PRIORITY_MEDIUM;
00005c  0140              LSLS     r0,r0,#5
00005e  6165              STR      r5,[r4,#0x14]  ; hdma_usart1_tx
000060  e9c45006          STRD     r5,r0,[r4,#0x18]
;;;225        if (HAL_DMA_Init(&hdma_usart1_tx) != HAL_OK)
000064  4620              MOV      r0,r4
000066  f7fffffe          BL       HAL_DMA_Init
00006a  b108              CBZ      r0,|L7.112|
;;;226        {
;;;227          Error_Handler();
00006c  f7fffffe          BL       Error_Handler
                  |L7.112|
;;;228        }
;;;229    
;;;230        __HAL_LINKDMA(huart,hdmatx,hdma_usart1_tx);
000070  6334              STR      r4,[r6,#0x30]
;;;231    
;;;232        /* Peripheral interrupt init */
;;;233        HAL_NVIC_SetPriority(USART1_IRQn, 5, 0);
000072  2200              MOVS     r2,#0
000074  2105              MOVS     r1,#5
000076  2025              MOVS     r0,#0x25
000078  6266              STR      r6,[r4,#0x24]  ; hdma_usart1_tx
00007a  f7fffffe          BL       HAL_NVIC_SetPriority
;;;234        HAL_NVIC_EnableIRQ(USART1_IRQn);
00007e  2025              MOVS     r0,#0x25
000080  f7fffffe          BL       HAL_NVIC_EnableIRQ
                  |L7.132|
;;;235      /* USER CODE BEGIN USART1_MspInit 1 */
;;;236    
;;;237      /* USER CODE END USART1_MspInit 1 */
;;;238      }
;;;239    
;;;240    }
000084  b006              ADD      sp,sp,#0x18
000086  bd70              POP      {r4-r6,pc}
;;;241    
                          ENDP

                  |L7.136|
                          DCD      0x40013800
                  |L7.140|
                          DCD      0x40021000
                  |L7.144|
                          DCD      0x40010800
                  |L7.148|
                          DCD      0x40020044
                  |L7.152|
                          DCD      hdma_usart1_tx

;*** Start embedded assembler ***

#line 1 "..\\Src\\stm32f1xx_hal_msp.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f1xx_hal_msp_c_d46e2bee____REV16|
#line 388 "../Drivers/CMSIS/Include/cmsis_armcc.h"
|__asm___19_stm32f1xx_hal_msp_c_d46e2bee____REV16| PROC
#line 389

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f1xx_hal_msp_c_d46e2bee____REVSH|
#line 402
|__asm___19_stm32f1xx_hal_msp_c_d46e2bee____REVSH| PROC
#line 403

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___19_stm32f1xx_hal_msp_c_d46e2bee____RRX|
#line 587
|__asm___19_stm32f1xx_hal_msp_c_d46e2bee____RRX| PROC
#line 588

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
